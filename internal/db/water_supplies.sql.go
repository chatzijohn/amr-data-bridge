// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: water_supplies.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getWaterSupplyByNumber = `-- name: GetWaterSupplyByNumber :one
SELECT id, "supplyNumber", geometry, "waterMeterSerialNumber", "currentImage", "previousImage", "createdAt", "updatedAt" FROM "waterSupplies" WHERE "supplyNumber" = $1 LIMIT 1
`

func (q *Queries) GetWaterSupplyByNumber(ctx context.Context, supplynumber string) (WaterSupply, error) {
	row := q.db.QueryRow(ctx, getWaterSupplyByNumber, supplynumber)
	var i WaterSupply
	err := row.Scan(
		&i.ID,
		&i.SupplyNumber,
		&i.Geometry,
		&i.WaterMeterSerialNumber,
		&i.CurrentImage,
		&i.PreviousImage,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const insertWaterSupply = `-- name: InsertWaterSupply :one
INSERT INTO "waterSupplies" ("supplyNumber", geometry, "waterMeterSerialNumber", "createdAt", "updatedAt")
VALUES ($1, ST_SetSRID(ST_MakePoint($2, $3), 4326), $4, NOW(), NOW())
RETURNING id, "supplyNumber", geometry, "waterMeterSerialNumber", "currentImage", "previousImage", "createdAt", "updatedAt"
`

type InsertWaterSupplyParams struct {
	SupplyNumber           string
	StMakepoint            interface{}
	StMakepoint_2          interface{}
	WaterMeterSerialNumber pgtype.Text
}

func (q *Queries) InsertWaterSupply(ctx context.Context, arg InsertWaterSupplyParams) (WaterSupply, error) {
	row := q.db.QueryRow(ctx, insertWaterSupply,
		arg.SupplyNumber,
		arg.StMakepoint,
		arg.StMakepoint_2,
		arg.WaterMeterSerialNumber,
	)
	var i WaterSupply
	err := row.Scan(
		&i.ID,
		&i.SupplyNumber,
		&i.Geometry,
		&i.WaterMeterSerialNumber,
		&i.CurrentImage,
		&i.PreviousImage,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateWaterSupply = `-- name: UpdateWaterSupply :one
UPDATE "waterSupplies"
SET geometry = ST_SetSRID(ST_MakePoint($2, $3), 4326),
    "waterMeterSerialNumber" = $4,
    "updatedAt" = NOW()
WHERE "supplyNumber" = $1
RETURNING id, "supplyNumber", geometry, "waterMeterSerialNumber", "currentImage", "previousImage", "createdAt", "updatedAt"
`

type UpdateWaterSupplyParams struct {
	SupplyNumber           string
	StMakepoint            interface{}
	StMakepoint_2          interface{}
	WaterMeterSerialNumber pgtype.Text
}

func (q *Queries) UpdateWaterSupply(ctx context.Context, arg UpdateWaterSupplyParams) (WaterSupply, error) {
	row := q.db.QueryRow(ctx, updateWaterSupply,
		arg.SupplyNumber,
		arg.StMakepoint,
		arg.StMakepoint_2,
		arg.WaterMeterSerialNumber,
	)
	var i WaterSupply
	err := row.Scan(
		&i.ID,
		&i.SupplyNumber,
		&i.Geometry,
		&i.WaterMeterSerialNumber,
		&i.CurrentImage,
		&i.PreviousImage,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
